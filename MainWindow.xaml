<Window x:Class="SkyrimPluginTextEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SkyrimPluginTextEditor"
        mc:Ignorable="d"
        Title="SkyrimPluginTextEditor" Height="800" Width="1200"
        ResizeMode="CanResizeWithGrip"
        MinHeight="400" MinWidth="600"
        Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <EventSetter Event="KeyDown" Handler="LV_KeyDown"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Column="0" Grid.Row="0">
                <Menu>
                    <MenuItem Header="File">
                        <MenuItem x:Name="MI_OpenFolder" Header="Open Folder..." Click="MI_OpenFolder_Click"/>
                        <MenuItem x:Name="MI_Reset" Header="Reset" Click="MI_Reset_Click"/>
                        <MenuItem x:Name="MI_Save" Header="Save" Click="MI_Save_Click"/>
                        <Separator />
                        <MenuItem x:Name="MI_Exit" Header="Exit" Click="MI_Exit_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <DockPanel Grid.Column="1" Grid.Row="0">
                <Menu>
                    <MenuItem Header="Tools">
                        <MenuItem x:Name="MI_Setting" Header="Setting" Click="MI_Setting_Click"/>
                        <Separator />
                        <MenuItem x:Name="MI_SafetyMode" Header="Safety Mode" IsCheckable="True" Checked="MI_SafetyMode_CheckUncheck" Unchecked="MI_SafetyMode_CheckUncheck" ToolTip="if frequent crashes, enable then load speed is a little slower, but loads safely"/>
                        <Separator />
                        <MenuItem x:Name="MI_FileManager" Header="Open File Manager..." Click="MI_FileManager_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <DockPanel Grid.Column="2" Grid.Row="0">
                <Menu>
                    <MenuItem Header="Macro">
                        <MenuItem x:Name="MI_Macro" Header="Load" Click="MI_Macro_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="2" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100*"/>
                    <RowDefinition Height="10"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="1.75*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="62"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="192*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="150*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15">Master Plugin</TextBlock>
                            <ComboBox x:Name="CB_MasterPluginBefore" Grid.Column="1" Margin="1,3,1,3" SelectionChanged="CB_SelectionChanged" DisplayMemberPath="MasterPluginName">
                                <ComboBox.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="Control.ToolTip" Value="{Binding FromPlugins}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <TextBlock Grid.Column="2" Margin="1,3,1,3" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15">-></TextBlock>
                            <TextBox x:Name="TB_MasterPluginAfter" TextWrapping="Wrap" Grid.Column="3" Margin="1,3,1,3" TextChanged="TB_TextChanged"></TextBox>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="284*"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="CB_AddTextType" Grid.Column="0" Margin="5,3,5,3" HorizontalContentAlignment="Center" SelectionChanged="CB_SelectionChanged"></ComboBox>
                            <TextBox x:Name="TB_AddText" Grid.Column="1" Margin="1,3,1,3" TextChanged="TB_TextChanged"></TextBox>
                        </Grid>
                        <Grid Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="254*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="70"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="1,16,1,16" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15">Replace</TextBlock>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="TB_ReplaceSearch" Grid.Column="0" Margin="1,3,1,3" TextChanged="TB_TextChanged"></TextBox>
                                    <CheckBox x:Name="CB_MatchCase" Grid.Column="2" Margin="1,3,1,3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Match Case" Checked="SaveStateOnConfig" Unchecked="SaveStateOnConfig" IsChecked="{Binding IsChecked}"/>
                                </Grid>
                                <TextBox x:Name="TB_ReplaceResult" Grid.Row="1" Margin="1,3,1,3" TextChanged="TB_TextChanged"></TextBox>
                            </Grid>
                            <Button Grid.Column="3" Margin="1,3,1,3" x:Name="BT_Apply" Content="Apply" IsEnabled="False" Click="BT_Apply_Click"/>
                        </Grid>
                        <Grid Grid.Row="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <ListView  x:Name="LV_ConvertListBefore" Margin="1,3,1,3" SelectionMode="Extended" SizeChanged="LV_SizeChanged" ScrollViewer.ScrollChanged="LV_ConvertList_ScrollChanged">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Check" Click="LV_Check_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck" Click="LV_Uncheck_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                                            <MenuItem Header="Invert"  Click="LV_Invert_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Check all" Click="LV_CheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck all" Click="LV_UncheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Invert all" Click="LV_InvertAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.View>
                                        <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                            <GridViewColumn x:Name="GVC_ConvertListBefore" Header="Before" Width="430">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox x:Name="CB_ConvertBefore" MouseEnter="Checkbox_OnMouseEnter" GotMouseCapture="UIElement_OnGotMouseCapture" IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0"/>
                                                            <TextBlock Text="{Binding TextBeforeDisplay}" Margin="5,0"/>
                                                            <StackPanel.ToolTip>
                                                                <ToolTip>
                                                                    <StackPanel Orientation="Vertical">
                                                                        <Label Content="{Binding ToolTip}" />
                                                                    </StackPanel>
                                                                </ToolTip>
                                                            </StackPanel.ToolTip>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                            <Grid Grid.Column="1">
                                <ListView  x:Name="LV_ConvertListAfter" Margin="1,3,1,3" SelectionMode="Extended" SizeChanged="LV_SizeChanged" ScrollViewer.ScrollChanged="LV_ConvertList_ScrollChanged">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Check" Click="LV_Check_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck" Click="LV_Uncheck_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                                            <MenuItem Header="Invert"  Click="LV_Invert_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Check all" Click="LV_CheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck all" Click="LV_UncheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Invert all" Click="LV_InvertAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn x:Name="GVC_ConvertListAfter" Header="After" Width="430">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox x:Name="CB_ConvertListAfter" MouseEnter="Checkbox_OnMouseEnter" GotMouseCapture="UIElement_OnGotMouseCapture" IsChecked="{Binding IsChecked}" Margin="5,0,0,0" />
                                                            <TextBlock Text="{Binding TextAfterDisplay}" Margin="5,0" />
                                                            <StackPanel.ToolTip>
                                                                <ToolTip>
                                                                    <StackPanel Orientation="Vertical">
                                                                        <Label Content="{Binding ToolTip}" />
                                                                    </StackPanel>
                                                                </ToolTip>
                                                            </StackPanel.ToolTip>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="245*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <ListView  x:Name="LV_PluginList" Margin="1,3,1,3" SelectionMode="Extended" SizeChanged="LV_SizeChanged">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Check" Click="LV_Check_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck" Click="LV_Uncheck_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                                            <MenuItem Header="Invert"  Click="LV_Invert_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Check all" Click="LV_CheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck all" Click="LV_UncheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Invert all" Click="LV_InvertAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn x:Name="GVC_Plugins" Header="Plugins" Width="295">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox x:Name="CB_PluginList" MouseEnter="Checkbox_OnMouseEnter" GotMouseCapture="UIElement_OnGotMouseCapture" IsChecked="{Binding IsChecked, Mode=TwoWay}" Tag="" Margin="45,0,0,0" Checked="CB_Plugins_CheckUncheck" Unchecked="CB_Plugins_CheckUncheck"/>
                                                            <TextBlock Text="{Binding RecordType}" Margin="5,0" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                    <ListView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Expander IsExpanded="True" Margin="10,7,0,0">
                                                                    <Expander.Header>
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <CheckBox x:Name="CB_PluginListHeader"  MouseEnter="Checkbox_OnMouseEnter" GotMouseCapture="UIElement_OnGotMouseCapture" Tag="{Binding Name}" IsChecked="True" Margin="5,5,0,0" Checked="CB_Plugins_Header_CheckUncheck" Unchecked="CB_Plugins_Header_CheckUncheck"/>
                                                                            <TextBlock Text="{Binding Name}" Margin="5,2" />
                                                                        </StackPanel>
                                                                    </Expander.Header>
                                                                    <ItemsPresenter />
                                                                </Expander>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GroupStyle.ContainerStyle>
                                        </GroupStyle>
                                    </ListView.GroupStyle>
                                </ListView>
                            </Grid>
                            <Grid Grid.Row="1">
                                <ListView  x:Name="LV_FragmentList" Margin="1,3,1,3" SelectionMode="Extended" SizeChanged="LV_SizeChanged">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Check" Click="LV_Check_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck" Click="LV_Uncheck_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                                            <MenuItem Header="Invert"  Click="LV_Invert_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Check all" Click="LV_CheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Uncheck all" Click="LV_UncheckAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                            <MenuItem Header="Invert all" Click="LV_InvertAll_OnClick" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn x:Name="GVC_Fragments" Header="Fragments" Width="295">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox x:Name="CB_Fragments" MouseEnter="Checkbox_OnMouseEnter" GotMouseCapture="UIElement_OnGotMouseCapture" IsChecked="{Binding IsChecked, Mode=TwoWay}" IsEnabled="{Binding IsEnable, Mode=OneWay}" Margin="5,0,0,0" Checked="CB_Fragments_CheckUncheck" Unchecked="CB_Fragments_CheckUncheck"/>
                                                            <TextBlock Text="{Binding FragmentType}" Margin="5,0" Foreground="{Binding Foreground, Mode=OneWay}"/>
                                                            <StackPanel.ToolTip>
                                                                <ToolTip>
                                                                    <StackPanel Orientation="Vertical">
                                                                        <Label Content="{Binding FromRecoredsToolTip}"/>
                                                                    </StackPanel>
                                                                </ToolTip>
                                                            </StackPanel.ToolTip>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid Grid.Row="1">
                    <ProgressBar x:Name="PB_Loading" Grid.Column="0" Margin="1,3,1,3">
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFBFE1FF" Offset="0"/>
                                            <GradientStop Color="#FF75BFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
